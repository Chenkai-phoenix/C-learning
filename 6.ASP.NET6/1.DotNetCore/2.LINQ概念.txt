----LINQ
一、
数据操作的类库。
二.委托
1.基本概念：指向方法的类型。
2.dotnet定义的泛型委托Action（无返回值）和Func（有返回值），所以一般不使用自定义委托类型
三.泛型委托
 * 1.Action：无返回值委托类型
 * 2.Func：有返回值委托类型
 * 3.匿名方法委托
四.lambda表达式（匿名方法简化写法）
 * 1.可以只写形参，不需要写形参类型；
 * 2.当lambda方法体中无返回值且只有一行代码，也可以省略{}；
 * 3.当lambda方法体中有返回值且只有一行代码，可以同时省略{}和return；（必须同在同去）
 * 4.当lambda仅有一个参数，可以省略（）；没有参数必须写（）；
 五.LINQ之常用扩展方法(1):
*1.大部分是IEnumerable<T>接口的扩展方法，因此继承了IEnumerable<T>接口的类都可以用LINQ的方法，数组，集合等等。
*2.where():条件判断  有满足条件的元素，返回元素类型的IEnumerable集合
*3.count()：条件计数 有满足条件的元素计数加1，返回计数总和    int
*4.Any（）：至少一个元素满足条件，返回true   bool
*5.Single(): 返回满足条件的唯一元素，多余一个或者是0都会异常。
*6.SingleOrDefault（）:返回满足条件的唯一元素,多余一个会异常，0个返回元素类型默认值，int返回0，string返回null
*7.First（）：满足条件的第一个元素,返回元素类型;都没有异常
*8.FirstOrDefault():满足条件的第一个元素,返回元素类型;都没有返回元素类型默认值
*9.Order（）：输出升序排列,不影响原始数据排列；返回类型IOrderedEnumerable<T> 
*10.OrderByDescending（）：输出降序排列，不影响原始数据排列；返回类型IOrderedEnumerable<T> 
*11.ThenBy():用在Order，OrderByDescending之后，表示按规则一排序后在按规则二升序排序
*12.Skip（）和Take（）：限制结果集，获取部分数据,
*一起用时：Skip()数据起始位置，Take（）获取个数
*独立用时：Skip()跳过数据数，Take（）获取个数，当数据个数少于取得数据会返会当前数据
 六.LINQ之常用扩展方法(2):
 * 1.聚合函数：Min()；Max（）；Sum（）；Average（）；GroupBy()分组
 * 2.；GroupBy()分组:理解如何访问


